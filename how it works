how pygame work in the conceptual level 
    -every pygame consiste of 2 parts
    -part 1, where you set up all the code you need for the game that is game logic
    -part 2, is the loop for runing the game. inside the loop pygame continuously cycle 
through a while loop updates the code and raw the resulting pictures and since that happens
many times pers second we perciev this as a moving image

setup part
-----------
1) create a rectangule
2) set the starting posion and movent speed

loop
-----------
1) function to make the rectangule move to the right by the movenment speend once per loop cycle

-------------------------------------------set by step -------------------------------
    1 create setup module
    2 Drawing on our window
            befor drawing you need to understand the highranking of 4 diffrent concept
            --display surface. the parent surface and we can only have one.
                --regular sueface. a lay that hold materials in order to keep your game organise. this
                  unlike most be need in the display surface. NB we can have many regular surfaces
                --rectangular surface. it is use to encapsulate shapes and regular surfaces
                    which make them more easier to manipulate and measure them 

    3 performe animations 
        to do it you need to add a step between define rectangles and draw rectangule as shown below
        -Define rectangles
            ball = pygame.Rect(screen_width/2-15,screen_height/2-15, 30, 30)
            player = pygame.Rect(screen_width-10, screen_height / 2-70 , 10,140)
            opponent = pygame.Rect(10, screen_height / 2 - 70, 10,140)

            -----------------------Animation step---------------------------------
            make change by moving the numer of coordinate by adding the number of pixel every cycle of the loop
            and for that purpose the rectangles are very useful
            -------------------------------------------------------
         
        -Draw rectangles
            pygame.draw.rect(screen, light_grey, player)
            pygame.draw.rect(screen, light_grey, opponent) 
            pygame.draw.ellipse(screen, light_grey, ball)

    4 inputed 
            up arrow = move player up (make use of handlers)
                a button has been pressed : start moving 
                a button has been released : stop moving 
            down arrow = down player down (make use of handlers)
                a button has been pressed : start moving 
                a button has been released : stop moving

    
reset logic 
 onec the ball hit either the left or right wall
    return ball in center
    restart in a random direction 
mofify the statement  when ball hit either the left or right wall
            replace the line which resver the ball with the function that will perform reset logic


------------ how my scores workes
a variable to store scores
text to dispaly scores

steps in displaying text in pygame
    1; create a font and a font size
    2; write text on surface 
    3; Put the text sirface on the main surface                